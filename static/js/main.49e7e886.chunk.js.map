{"version":3,"sources":["components/Searchbar/Searchbar.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Loader/Loader.js","components/Button/Button.js","components/ImageGallery/ImageGallery.js","services/picturesApi.js","components/Modal/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Searchbar","onSubmit","useState","request","setRequest","className","event","preventDefault","trim","toast","info","type","onChange","currentTarget","value","toLowerCase","name","autoComplete","autoFocus","placeholder","ImageGalleryItem","pictures","onClick","map","picture","src","webformatURL","alt","tags","id","Loader","color","height","width","timeout","Button","ImageGallery","query","handleLoadMore","page","setPictures","error","setError","status","setStatus","useEffect","getImages","length","fetchPictures","autoScroll","fetch","then","response","ok","json","Promise","reject","Error","picturesAPI","picturesArray","hits","catch","window","scrollTo","top","document","documentElement","scrollHeight","behavior","message","Modal","modalPicture","onClose","addEventListener","handleKeyDown","removeEventListener","code","target","largeImageURL","App","pictureQuery","setPictureQeury","showModal","setShowModal","setModalPicture","setPage","position","autoClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.49e7e886.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./Searchbar.css\";\n\nfunction Searchbar({ onSubmit }) {\n  const [request, setRequest] = useState(\"\");\n\n  const handleChange = (event) => {\n    setRequest(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (request.trim() === \"\") {\n      return toast.info(\"Type something to find a picture\");\n    }\n\n    onSubmit(request);\n    setRequest(\"\");\n  };\n\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          className=\"SearchForm-input\"\n          onChange={handleChange}\n          type=\"text\"\n          name=\"request\"\n          value={request}\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n}\n\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default Searchbar;\n","import PropTypes from \"prop-types\";\nimport \"./ImageGalleryItem.css\";\n\nfunction ImageGalleryItem({ pictures, onClick }) {\n  return pictures.map((picture) => (\n    <li key={picture.id} className=\"ImageGalleryItem\">\n      <img\n        onClick={() => onClick(picture)}\n        src={picture.webformatURL}\n        alt={picture.tags}\n        className=\"ImageGalleryItem-image\"\n      />\n    </li>\n  ));\n}\n\nImageGalleryItem.propTypes = {\n  pictures: PropTypes.arrayOf(PropTypes.object),\n  onClick: PropTypes.func,\n};\n\nexport default ImageGalleryItem;\n","import React from \"react\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport LoaderSpinner from \"react-loader-spinner\";\nimport \"./Loader.css\";\n\nexport default function Loader() {\n  return (\n    <div className=\"Loader\">\n      <LoaderSpinner\n        type=\"Puff\"\n        color=\"#046d0c\"\n        height={100}\n        width={100}\n        timeout={5000}\n        margin-left={300}\n      />\n    </div>\n  );\n}\n","import PropTypes from \"prop-types\";\nimport \"./Button.css\";\n\nfunction Button({ onClick }) {\n  return (\n    <button onClick={onClick} className=\"Button\" type=\"button\">\n      Load more\n    </button>\n  );\n}\n\nButton.propTypes = {\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\nimport Loader from \"../../components/Loader/Loader\";\nimport Button from \"../Button/Button\";\nimport picturesAPI from \"../../services/picturesApi\";\nimport \"./ImageGallery.css\";\n\nfunction ImageGallery({ query, onClick, handleLoadMore, page }) {\n  const [pictures, setPictures] = useState([]);\n  const [error, setError] = useState(null);\n  const [status, setStatus] = useState(\"idle\");\n\n  useEffect(() => {\n    if (query) {\n      getImages(query, page);\n    }\n    // eslint-disable-next-line\n  }, [query, page]);\n\n  const getImages = (query, page) => {\n    if (page === 1 && pictures.length === 0) {\n      fetchPictures(query, page);\n    }\n\n    if (page === 1 && pictures.length !== 0) {\n      setPictures([]);\n      fetchPictures(query, page);\n    }\n\n    if (page > 1) {\n      fetchPictures(query, page);\n      autoScroll();\n    }\n  };\n\n  const fetchPictures = (query, page) => {\n    setStatus(\"pending\");\n    picturesAPI(query, page)\n      .then((pictures) => {\n        const picturesArray = pictures.hits;\n        setPictures((pictures) => [...pictures, ...picturesArray]);\n        setStatus(\"resolved\");\n        if (page > 1) {\n          autoScroll();\n        }\n      })\n      .catch((error) => {\n        setError(error);\n        setStatus(\"rejected\");\n      });\n  };\n\n  const autoScroll = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  if (status === \"idle\") {\n    return <div className=\"Warning\">Type the word to search pictures</div>;\n  }\n\n  if (status === \"pending\") {\n    return (\n      <>\n        {pictures.length > 12 && (\n          <ul className=\"ImageGallery\">\n            <ImageGalleryItem pictures={pictures} onClick={onClick} />\n          </ul>\n        )}\n        <Loader />\n      </>\n    );\n  }\n\n  if (status === \"rejected\") {\n    return toast.error(error.message);\n  }\n\n  if (status === \"resolved\") {\n    return (\n      <>\n        <ul className=\"ImageGallery\">\n          <ImageGalleryItem pictures={pictures} onClick={onClick} />\n        </ul>\n\n        {pictures.length > 0 ? (\n          <Button onClick={handleLoadMore} />\n        ) : (\n          <div className=\"Warning\">\n            You should write down right word for search\n          </div>\n        )}\n      </>\n    );\n  }\n}\n\nImageGallery.propTypes = {\n  query: PropTypes.string,\n  openModal: PropTypes.func,\n  handleLoadMore: PropTypes.func,\n  page: PropTypes.number,\n};\n\nexport default ImageGallery;\n","const BASE_URL = \"https://pixabay.com/api/\";\nconst API_KEY = \"23157065-e1d5c0e7ddd229ceec096f468\";\n\nexport default function fetchPicture(request, page) {\n  return fetch(\n    `${BASE_URL}?q=${request}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`\n  ).then((response) => {\n    if (response.ok) {\n      return response.json();\n    }\n    return Promise.reject(new Error(`There are no pictures with ${request}`));\n  });\n}\n","import React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Modal.css\";\n\nfunction Modal({ modalPicture, onClose }) {\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handleKeyDown);\n\n    return () => {\n      window.removeEventListener(\"keydown\", handleKeyDown);\n    };\n  });\n\n  const handleKeyDown = (event) => {\n    if (event.code === \"Escape\" || event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  const handleOverlayClick = (event) => {\n    if (event.currentTarget === event.target) {\n      onClose();\n    }\n  };\n\n  return (\n    <div className=\"Overlay\" onClick={handleOverlayClick}>\n      <div className=\"Modal\">\n        <img\n          className=\"Modal__Picture\"\n          src={modalPicture.largeImageURL}\n          alt={modalPicture.tags}\n        />\n      </div>\n    </div>\n  );\n}\n\nModal.propTypes = {\n  modalPicture: PropTypes.object,\n  onClose: PropTypes.func,\n};\n\nexport default Modal;\n","import React, { useState } from \"react\";\nimport { ToastContainer } from \"react-toastify\";\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport Modal from \"./components/Modal/Modal\";\nimport \"./App.css\";\n\nfunction App() {\n  const [pictureQuery, setPictureQeury] = useState(\"\");\n  const [showModal, setShowModal] = useState(false);\n  const [modalPicture, setModalPicture] = useState(\"\");\n  const [page, setPage] = useState(1);\n\n  const handleFormSubmit = (pictureQuery) => {\n    setPictureQeury(pictureQuery);\n    setPage(1);\n  };\n\n  const openModal = (modalPicture) => {\n    setModalPicture(modalPicture);\n    setShowModal(true);\n  };\n\n  const closeModal = () => {\n    setShowModal(false);\n  };\n\n  const handleLoadMore = () => {\n    setPage((page) => page + 1);\n  };\n\n  return (\n    <div>\n      <Searchbar onSubmit={handleFormSubmit} />\n      <ImageGallery\n        query={pictureQuery}\n        onClick={openModal}\n        handleLoadMore={handleLoadMore}\n        page={page}\n      />\n      {showModal && <Modal modalPicture={modalPicture} onClose={closeModal} />}\n      <ToastContainer position=\"top-center\" autoClose={2000} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}